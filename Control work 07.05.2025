# Task1
import cv2
image = cv2.imread("girl2.jpg")
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
faces = face_cascade.detectMultiScale(gray, 1.1, 4)
for (x,y,w,h) in faces:
    cv2.rectangle(image, (x,y), (x+w, y+h), (0,0,255), 3)
cv2.imshow("Найденные лица", image)
cv2.waitKey(0)
cv2.destroyAllWindows()

# Task2
import matplotlib.pyplot as plt
from scipy import datasets
from skimage import io, transform
image = io.imread('flowers.png')
output_shape = (image.shape[0] // 2, image.shape[1] // 2)
resized_image = transform.resize(image, output_shape, anti_aliasing=True)
fig, axes = plt.subplots(1, 2, figsize=(10, 5))
axes[0].imshow(image)
axes[0].set_title('Original Image with shape '+str(image.shape))
axes[1].imshow(resized_image)
axes[1].set_title('Resized Image  with shape '+str(resized_image.shape))
plt.tight_layout()
plt.show()

# Task3
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

iris = load_iris()
X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.3)
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)
print(f"Accuracy: {model.score(X_test, y_test):.2f}")
